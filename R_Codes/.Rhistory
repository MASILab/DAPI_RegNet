demo()
graphics.off()
graphics.on()
clear
ls
clearPushBack()
my_dataframe <- read.csv("/fs5/p_masi/rudravg/PosStats_GCA020ACB_test.csv")
library(GammaGateR)
library(gridExtra)
library(ggpubr)
#> Loading required package: ggplot2
library(hrbrthemes)
allMarkers = grep('^Mean_.*$', names(my_dataframe), value=TRUE)
allMarkers = grep('^Mean_Nuc.*$', names(my_dataframe), value=TRUE)
allMarkers=allMarkers[1:5]
nzNormedMarkers = paste0('nzNorm_', allMarkers)
my_dataframe[, nzNormedMarkers] = log10(1 + sweep(my_dataframe[, allMarkers], 2, colMeans(replace(my_dataframe[, allMarkers], my_dataframe[, allMarkers] == 0, NA), na.rm = TRUE), FUN = '/'))
cell = do.call(rbind, lapply(split(my_dataframe, my_dataframe$slide_id), function(df){df[,nzNormedMarkers] = log10(1+sweep(df[,allMarkers], 2, colMeans(replace(df[,allMarkers], df[,allMarkers]==0, NA), na.rm = TRUE ), FUN = '/' ) ); df }) )
for(i in 1:length(allMarkers)){
cat('\n### ', allMarkers[i], " \n")
col.name <- nzNormedMarkers[i]
slidetest <- cell[, c("slide_id", col.name)]
slidetest <- slidetest[slidetest[,col.name]!=0,]
colnames(slidetest)[2] <- "mkr.val"
p1 <- ggplot() + ggtitle(col.name)+
geom_freqpoly(data=slidetest, aes(mkr.val,y=after_stat(density), color=slide_id,group=slide_id), binwidth = 0.05, alpha=0.1, linewidth=1)+theme_ipsum()+theme(legend.position = "none")
print(p1)
cat('\n\n')
}
groupPolarisFit <- groupGammaGateR(cell[,nzNormedMarkers],
slide = cell$slide_id,
n.cores = 16)
save(groupPolarisFit, file="groupPolarisFit_test_ourdata.RData")
convCheck(groupPolarisFit)
post_01_0_889_121 <- groupPolarisFit[["1"]][["expressionZ"]]
write.csv(post_01_0_889_121, file = "our_data_test.csv", row.names = FALSE)
clc
cell <- read.csv("/fs5/p_masi/rudravg/MxIF_Vxm_Registered/sheets",stringsAsFactors = FALSE)
cell <- read.csv("/fs5/p_masi/rudravg/MxIF_Vxm_Registered/sheets/unregistered_instance_data_allMarkers4.csv",stringsAsFactors = FALSE)
library(GammaGateR)
library(gridExtra)
library(ggpubr)
library(hrbrthemes)
View(cell)
cell$slide_id <- 1
View(cell)
allMarkers = grep('^Mean', names(cell), value=TRUE)
nzNormedMarkers = paste0('nzNorm_',allMarkers)
cell = do.call(rbind, lapply(split(cell, cell$slide_id), function(df){df[,nzNormedMarkers] = log10(1+sweep(df[,allMarkers], 2, colMeans(replace(df[,allMarkers], df[,allMarkers]==0, NA), na.rm = TRUE ), FUN = '/' ) ); df }) )
groupPolarisFit <- groupGammaGateR(cell[,nzNormedMarkers],
slide = cell$slide_id,
n.cores = 15)
convCheck(groupPolarisFit)
post_all <- do.call(rbind, (lapply(groupPolarisFit2, "[[", "expressionZ")))
post_all <- do.call(rbind, (lapply(groupPolarisFit, "[[", "expressionZ")))
View(post_all)
View(post_all)
rm()
rm(list=ls())
library(GammaGateR)
library(gridExtra)
library(ggpubr)
library(hrbrthemes)
cell <- read.csv("/fs5/p_masi/rudravg/MxIF_Vxm_Registered/sheets/unregistered_instance_data_allMarkers4.csv")
View(cell)
View(cell)
cell$slide_id <- 1
allMarkers = grep('^Mean', names(cell), value=TRUE)
nzNormedMarkers = paste0('nzNorm_',allMarkers)
cell = do.call(rbind, lapply(split(cell, cell$slide_id), function(df){df[,nzNormedMarkers] = log10(1+sweep(df[,allMarkers], 2, colMeans(replace(df[,allMarkers], df[,allMarkers]==0, NA), na.rm = TRUE ), FUN = '/' ) ); df }) )
groupPolarisFit <- groupGammaGateR(cell[,nzNormedMarkers],
slide = cell$slide_id,
n.cores = 15)
post_all <- do.call(rbind, (lapply(groupPolarisFit, "[[", "expressionZ")))
View(post_all)
cell <- read.csv("/fs5/p_masi/rudravg/MxIF_Vxm_Registered/sheets/instance_data_allMarkers.csv")
cell = do.call(rbind, lapply(split(cell, cell$slide_id), function(df){df[,nzNormedMarkers] = log10(1+sweep(df[,allMarkers], 2, colMeans(replace(df[,allMarkers], df[,allMarkers]==0, NA), na.rm = TRUE ), FUN = '/' ) ); df }) )
groupPolarisFit <- groupGammaGateR(cell[,nzNormedMarkers],
slide = cell$slide_id,
n.cores = 15)
rm(list=ls())
cell <- read.csv("/fs5/p_masi/rudravg/MxIF_Vxm_Registered/sheets/instance_data_allMarkers.csv")
allMarkers = grep('^Mean', names(cell), value=TRUE)
nzNormedMarkers = paste0('nzNorm_',allMarkers)
cell = do.call(rbind, lapply(split(cell, cell$slide_id), function(df){df[,nzNormedMarkers] = log10(1+sweep(df[,allMarkers], 2, colMeans(replace(df[,allMarkers], df[,allMarkers]==0, NA), na.rm = TRUE ), FUN = '/' ) ); df }) )
View(cell)
cell <- read.csv("/fs5/p_masi/rudravg/MxIF_Vxm_Registered/sheets/instance_data_allMarkers.csv")
allMarkers = grep('^Mean', names(cell), value=TRUE)
nzNormedMarkers = paste0('nzNorm_',allMarkers)
cell$slide_id <- 1
cell = do.call(rbind, lapply(split(cell, cell$slide_id), function(df){df[,nzNormedMarkers] = log10(1+sweep(df[,allMarkers], 2, colMeans(replace(df[,allMarkers], df[,allMarkers]==0, NA), na.rm = TRUE ), FUN = '/' ) ); df }) )
groupPolarisFit <- groupGammaGateR(cell[,nzNormedMarkers],
slide = cell$slide_id,
n.cores = 15)
post_all <- do.call(rbind, (lapply(groupPolarisFit, "[[", "expressionZ")))
View(post_all)
rm(list=ls())
cell <- read.csv("/fs5/p_masi/rudravg/MxIF_Vxm_Registered/sheets/unregistered_instance_data_allMarkers3.csv")
cell <- read.csv("/fs5/p_masi/rudravg/MxIF_Vxm_Registered/sheets/unregistered_instance_data_allMarkers54.csv")
cell <- read.csv("/fs5/p_masi/rudravg/MxIF_Vxm_Registered/sheets/unregistered_instance_data_allMarkers4.csv")
allMarkers = grep('^Mean', names(cell), value=TRUE)
nzNormedMarkers = paste0('nzNorm_',allMarkers)
cell$slide_id <- 1
cell = do.call(rbind, lapply(split(cell, cell$slide_id), function(df){df[,nzNormedMarkers] = log10(1+sweep(df[,allMarkers], 2, colMeans(replace(df[,allMarkers], df[,allMarkers]==0, NA), na.rm = TRUE ), FUN = '/' ) ); df }) )
groupPolarisFit <- groupGammaGateR(cell[,nzNormedMarkers],
slide = cell$slide_id,
n.cores = 15)
post_all <- do.call(rbind, (lapply(groupPolarisFit, "[[", "expressionZ")))
View(post_all)
rm(list = ls())
cell <- read.csv("/fs5/p_masi/rudravg/MxIF_Vxm_Registered/sheets/instance_data_allMarkers.csv")
slide = cell$slide_id,
cell$slide_id <- 1
View(cell)
View(cell)
allMarkers = grep('^Mean', names(cell), value=TRUE)
nzNormedMarkers = paste0('nzNorm_',allMarkers)
set.seed(42)
groupPolarisFit <- groupGammaGateR(cell[,nzNormedMarkers],
slide = cell$slide_id,
n.cores = 1)
View(cell)
cell = do.call(rbind, lapply(split(cell, cell$slide_id), function(df){df[,nzNormedMarkers] = log10(1+sweep(df[,allMarkers], 2, colMeans(replace(df[,allMarkers], df[,allMarkers]==0, NA), na.rm = TRUE ), FUN = '/' ) ); df }) )
groupPolarisFit <- groupGammaGateR(cell[,nzNormedMarkers],
slide = cell$slide_id,
n.cores = 1)
library(GammaGateR)
library(gridExtra)
library(ggpubr)
library(hrbrthemes)
groupPolarisFit <- groupGammaGateR(cell[,nzNormedMarkers],
slide = cell$slide_id,
n.cores = 1)
post_all <- do.call(rbind, (lapply(groupPolarisFit, "[[", "expressionZ")))
View(post_all)
convCheck(groupPolarisFit)
View(cell)
post_01_0_889_121 <- groupPolarisFit[["1"]][["expressionZ"]]
View(post_01_0_889_121)
post_01_0_889_121 <- groupPolarisFit[["1"]][["expressionW"]]
View(post_01_0_889_121)
marginal <- groupPolarisFit[["1"]][["expressionW"]]
posterior <- groupPolarisFit[["1"]][["expressionZ"]]
original <- groupPolarisFit[["1"]][["expressionX"]]
View(marginal)
View(original)
View(posterior)
getcwd()
getwd)
getwd()
setwd('/nfs2/forGaurav/yesbackup/DAPI_RegSegNet/R_Codes')
getwd()
csv_file <- '/fs5/p_masi/rudravg/MxIF_Vxm_Registered_V2/GCA020TIB_TISSUE01/unregistered_GCA020TIB_instances.csv'
rm(list = ls())
library(GammaGateR)
library(gridExtra)
library(ggpubr)
library(hrbrthemes)
set.seed(42)
csv_file <- '/fs5/p_masi/rudravg/MxIF_Vxm_Registered_V2/GCA020TIB_TISSUE01/unregistered_GCA020TIB_instances.csv'
name <- 'GCA020TIB_TISSUE01'
output_path <- "/fs5/p_masi/rudravg/MxIF_Vxm_Registered/metrics"
cell <- read.csv(csv_file)
cell$slide_id <- 1
allMarkers = grep('^Mean', names(cell), value=TRUE)
nzNormedMarkers = paste0('nzNorm_',allMarkers)
cell = do.call(rbind, lapply(split(cell, cell$slide_id), function(df){df[,nzNormedMarkers] = log10(1+sweep(df[,allMarkers], 2, colMeans(replace(df[,allMarkers], df[,allMarkers]==0, NA), na.rm = TRUE ), FUN = '/' ) ); df }) )
View(cell)
View(cell)
for(i in 1:length(allMarkers)){
cat('\n### ', allMarkers[i], " \n")
col.name <- nzNormedMarkers[i]
slidetest <- cell[, c("slide_id", col.name)]
slidetest <- slidetest[slidetest[,col.name]!=0,]
colnames(slidetest)[2] <- "mkr.val"
p1 <- ggplot() + ggtitle(col.name)+
geom_freqpoly(data=slidetest, aes(mkr.val,y=after_stat(density), color=slide_id,group=slide_id), binwidth = 0.05, alpha=0.1, linewidth=1)+theme_ipsum()+theme(legend.position = "none")
print(p1)
cat('\n\n')
}
groupPolarisFit <- groupGammaGateR(cell[,nzNormedMarkers],
slide = cell$slide_id,
n.cores = 1)
convCheck(groupPolarisFit)
for (i in (nzNormedMarkers)){
mkr.name <- strsplit(i, split="_")[[1]][4]
cat('\n### ', mkr.name, " \n")
temp <- groupPolarisFit[1:4]
class(temp) <- "groupGammaGateR"
plotss <- plot(temp, marker=i, diagnostic=FALSE, histogram=TRUE, print=FALSE, tabl=TRUE)
print(do.call(ggarrange,plotss))
cat('\n\n')
}
for (i in nzNormedMarkers) {
mkr.name <- strsplit(i, split = "_")[[1]][2]
cat('\n### ', mkr.name, " \n")
temp <- groupPolarisFit[1:4]
class(temp) <- "groupGammaGateR"
plotss <- plot(temp, marker = i, diagnostic = FALSE, histogram = TRUE, print = FALSE, tabl = TRUE)
print(do.call(ggarrange, plotss))
cat('\n\n')
}
for (i in nzNormedMarkers) {
mkr.name <- strsplit(i, split = "_")[[1]][2]
cat('\n### ', mkr.name, " \n")
temp <- groupPolarisFit[1:4]
class(temp) <- "groupGammaGateR"
plotss <- plot(temp, marker = i, diagnostic = FALSE, histogram = TRUE, print = FALSE, tabl = TRUE)
print(do.call(ggarrange, plotss))
cat('\n\n')
}
for (i in nzNormedMarkers) {
mkr.name <- strsplit(i, split = "_")[[1]][2]
cat('\n### ', mkr.name, " \n")
temp <- groupPolarisFit[1:4]
class(temp) <- "groupGammaGateR"
plotss <- plot(temp, marker = i, diagnostic = FALSE, histogram = TRUE, print = FALSE, tabl = TRUE)
ggarrange(plotss$histogram, plotss$density, plotss$fit, ncol = 3)
cat('\n\n')
}
for (i in nzNormedMarkers) {
mkr.name <- strsplit(i, split = "_")[[1]][2]
cat('\n### ', mkr.name, " \n")
temp <- groupPolarisFit[1:4]
class(temp) <- "groupGammaGateR"
plotss <- plot(temp, marker = i, diagnostic = FALSE, histogram = TRUE, print = FALSE, tabl = TRUE)
ggarrange(plotss$histogram, plotss$density, plotss$fit, ncol = 3)
cat('\n\n')
}
for (i in nzNormedMarkers) {
mkr.name <- strsplit(i, split = "_")[[1]][2]
cat('\n### ', mkr.name, " \n")
temp <- groupPolarisFit[1:15]
class(temp) <- "groupGammaGateR"
plotss <- plot(temp, marker = i, diagnostic = FALSE, histogram = TRUE, print = FALSE, tabl = TRUE)
ggarrange(plotss$histogram, plotss$density, plotss$fit, ncol = 3)
cat('\n\n')
}
for (i in nzNormedMarkers) {
mkr.name <- strsplit(i, split = "_")[[1]][2]
cat('\n### ', mkr.name, " \n")
temp <- groupPolarisFit[1:4]
class(temp) <- "groupGammaGateR"
plotss <- plot(temp, marker = i, diagnostic = FALSE, histogram = TRUE, print = FALSE)
ggarrange(plotss$histogram, plotss$density, plotss$fit, ncol = 3)
cat('\n\n')
}
for (i in nzNormedMarkers) {
mkr.name <- strsplit(i, split = "_")[[1]][3]
cat('\n### ', mkr.name, " \n")
temp <- groupPolarisFit[1:4]
class(temp) <- "groupGammaGateR"
plotss <- plot(temp, marker = i, diagnostic = FALSE, histogram = TRUE, print = FALSE)
ggarrange(plotss$histogram, plotss$density, plotss$fit, ncol = 3)
cat('\n\n')
}
for (i in nzNormedMarkers) {
mkr.name <- strsplit(i, split = "_")[[1]][3]
cat('\n### ', mkr.name, " \n")
temp <- groupPolarisFit[1]
class(temp) <- "groupGammaGateR"
plotss <- plot(temp, marker = i, diagnostic = FALSE, histogram = TRUE, print = FALSE)
ggarrange(plotss$histogram, plotss$density, plotss$fit, ncol = 3)
cat('\n\n')
}
for (i in (nzNormedMarkers)){
mkr.name <- strsplit(i, split="_")[[1]][3]
cat('\n### ', mkr.name, " \n")
temp <- groupPolarisFit[1]
class(temp) <- "groupGammaGateR"
plotss <- plot(temp, marker=i, diagnostic=FALSE, histogram=TRUE, print=FALSE, tabl=TRUE)
print(do.call(ggarrange,plotss))
cat('\n\n')
}
warnings()
rm(list = ls())
library(GammaGateR)
library(gridExtra)
library(ggpubr)
library(hrbrthemes)
set.seed(42)
csv_file <- '/fs5/p_masi/rudravg/MxIF_Vxm_Registered_V2/GCA020TIB_TISSUE01/combined_GCA020TIB_instances.csv'
cell <- read.csv(csv_file)
allMarkers = grep('^Mean', names(cell), value=TRUE)
nzNormedMarkers = paste0('nzNorm_',allMarkers)
cell = do.call(rbind, lapply(split(cell, cell$slide_id), function(df){df[,nzNormedMarkers] = log10(1+sweep(df[,allMarkers], 2, colMeans(replace(df[,allMarkers], df[,allMarkers]==0, NA), na.rm = TRUE ), FUN = '/' ) ); df }) )
View(cell)
View(cell)
for(i in 1:length(allMarkers)){
cat('\n### ', allMarkers[i], " \n")
col.name <- nzNormedMarkers[i]
slidetest <- cell[, c("slide_id", col.name)]
slidetest <- slidetest[slidetest[,col.name]!=0,]
colnames(slidetest)[2] <- "mkr.val"
p1 <- ggplot() + ggtitle(col.name)+
geom_freqpoly(data=slidetest, aes(mkr.val,y=after_stat(density), color=slide_id,group=slide_id), binwidth = 0.05, alpha=0.1, linewidth=1)+theme_ipsum()+theme(legend.position = "none")
print(p1)
cat('\n\n')
}
groupPolarisFit <- groupGammaGateR(cell[,nzNormedMarkers],
slide = cell$slide_id,
n.cores = 1)
convCheck(groupPolarisFit)
for (i in (nzNormedMarkers)){
mkr.name <- strsplit(i, split="_")[[1]][3]
cat('\n### ', mkr.name, " \n")
temp <- groupPolarisFit[1:2]
class(temp) <- "groupGammaGateR"
plotss <- plot(temp, marker=i, diagnostic=FALSE, histogram=TRUE, print=FALSE, tabl=TRUE)
print(do.call(ggarrange,plotss))
cat('\n\n')
}
